pipeline_class: "EvaluationPipelineForClassification" # choose the pipeline
# NOTE: If `EvaluationPipelineForClassification` then training step won't
# be run but still those params are required 
experiment_metadata:
  description: "Evaluation of: ResNet based 1-D conv model for classification"
  tag: "exp_04_task2_cnn_res"
dataloader_util_class_name: "ProcessedTextDataLoaderUtil" # This utility class
# is supposed to return loaders upon invoking its `get_data_loaders`
dataloader_root_dir: "resources/processed_data" # set root dir to load data from
shuffle: true
model_class_name: "CnnWithResidualConnection" # The network to use
load_from_checkpoint: true
checkpoint_path: "TODO: Add checkpoint (saved model) path here"
embedding_model_path: "resources/saved_models/embedding.model" #to load 
# word embeddings / vocabulary etc.
# NOTE: vaocalubalry file name is inferred from the model file name
cost_function_class_name: "CrossEntropyLoss"
threshold: 0.5 # to be used only if we decide to go for one vs all setting/ else ignored
trainer_class_name: "NetworkTrainer"
num_epochs: 50
batch_size: 8
optimizer_class_name: "AdamW"
learning_rate: 0.0005
scheduler: null
weight_decay: 0.0000001
logdir: "runs"
batch_log_frequency: 1000 # Print log after after these many batches
tensorboard_log_frequency: 1 # Log scalars after these many batches
model_save_frequency: 5 # frequency in epochs
model_name_tag: "exp_04_task2_cnn_res" # it will be included in the model file name
do_class_weighting: null
class_weighting_scheme: null
eval_on_train_data_too: true # set to `true` if f1 score etc. on training
# data is to be recorded